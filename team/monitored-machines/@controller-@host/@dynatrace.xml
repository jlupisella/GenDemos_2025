<connection-dynatrace interval="30000" name="Dynatrace" server-port="0" uid="9748e9a8-c9fd-472f-81cf-d854a2f182ba">
    <monitor-category name="builtin" short-display-name="builtin">
        <monitor-category name="billing" short-display-name="billing">
            <monitor-category name="custom_events_classic" short-display-name="custom_events_classic">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.custom_events_classic.usage_by_entity"
                    entity-id=""
                    entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                    format="NUMBER"
                    name="builtin:billing.custom_events_classic.usage_by_entity"
                    sampling="0"
                    short-display-name="(DPS) Custom Events Classic billing usage by monitored entity" unit="">
                    <description>The number of custom events ingested split by monitored entity. Custom events include events sent to Dynatrace via the Events API or events created by a log event extraction rule. For details on the events billed, refer to the usage_by_event_info metric. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="custom_metrics_classic" short-display-name="custom_metrics_classic">
                <monitor-category name="usage" short-display-name="usage">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.custom_metrics_classic.usage.other_by_entity"
                        entity-id=""
                        entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                        format="NUMBER"
                        name="builtin:billing.custom_metrics_classic.usage.other_by_entity"
                        sampling="0"
                        short-display-name="(DPS) Billed metric data points reported and split by other entities" unit="">
                        <description>The number of billed metric data points split by entities that cannot be assigned to a host. The values reported in this metric are not eligible for included metric deduction and will be billed as is. This trailing metric is reported at 15-minute intervals with up to a 15-minute delay. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                    </monitor-dynatrace>
                </monitor-category>
            </monitor-category>
            <monitor-category name="custom_traces_classic" short-display-name="custom_traces_classic">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.custom_traces_classic.usage_by_entity"
                    entity-id=""
                    entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                    format="NUMBER"
                    name="builtin:billing.custom_traces_classic.usage_by_entity"
                    sampling="0"
                    short-display-name="(DPS) Custom Traces Classic billing usage by monitored entity" unit="">
                    <description>The number of spans ingested split by monitored entity. A span is a single operation within a distributed trace, ingested into Dynatrace. For details on span types, refer to the usage_by_span_type metric. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="ddu" short-display-name="ddu">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.ddu.includedMetricDduPerHost"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:billing.ddu.includedMetricDduPerHost"
                    sampling="0"
                    short-display-name="DDU included per host" unit="">
                    <description>Included Davis data units per host</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.ddu.includedMetricPerHost"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:billing.ddu.includedMetricPerHost"
                    sampling="0"
                    short-display-name="DDU included metric data points per host" unit="">
                    <description>Included metric data points per host</description>
                </monitor-dynatrace>
                <monitor-category name="events" short-display-name="events">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.ddu.events.byEntity"
                        entity-id=""
                        entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                        format="NUMBER"
                        name="builtin:billing.ddu.events.byEntity"
                        sampling="0"
                        short-display-name="DDU events consumption by monitored entity" unit="">
                        <description>License consumption of Davis data units by events pool split by monitored entity</description>
                    </monitor-dynatrace>
                </monitor-category>
                <monitor-category name="log" short-display-name="log">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.ddu.log.byEntity"
                        entity-id=""
                        entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                        format="NUMBER"
                        name="builtin:billing.ddu.log.byEntity"
                        sampling="0"
                        short-display-name="DDU log consumption by monitored entity" unit="">
                        <description>License consumption of Davis data units by log pool split by monitored entity</description>
                    </monitor-dynatrace>
                </monitor-category>
                <monitor-category name="metrics" short-display-name="metrics">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.ddu.metrics.byEntity"
                        entity-id=""
                        entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                        format="NUMBER"
                        name="builtin:billing.ddu.metrics.byEntity"
                        sampling="0"
                        short-display-name="DDU metrics consumption by monitored entity" unit="">
                        <description>License consumption of Davis data units by metrics pool split by monitored entity</description>
                    </monitor-dynatrace>
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.ddu.metrics.byEntityRaw"
                        entity-id=""
                        entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                        format="NUMBER"
                        name="builtin:billing.ddu.metrics.byEntityRaw"
                        sampling="0"
                        short-display-name="DDU metrics consumption by monitored entity w/o host-unit included DDUs" unit="">
                        <description>License consumption of Davis data units by metrics pool split by monitored entity (aggregates host-unit included metrics, so value might be higher than actual consumption)</description>
                    </monitor-dynatrace>
                </monitor-category>
                <monitor-category name="serverless" short-display-name="serverless">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.ddu.serverless.byEntity"
                        entity-id=""
                        entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                        format="NUMBER"
                        name="builtin:billing.ddu.serverless.byEntity"
                        sampling="0"
                        short-display-name="DDU serverless consumption by service" unit="">
                        <description>License consumption of Davis data units by serverless pool split by service</description>
                    </monitor-dynatrace>
                </monitor-category>
                <monitor-category name="traces" short-display-name="traces">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.ddu.traces.byEntity"
                        entity-id=""
                        entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                        format="NUMBER"
                        name="builtin:billing.ddu.traces.byEntity"
                        sampling="0"
                        short-display-name="DDU traces consumption by monitored entity" unit="">
                        <description>License consumption of Davis data units by traces pool split by monitored entity</description>
                    </monitor-dynatrace>
                </monitor-category>
            </monitor-category>
            <monitor-category name="foundation_and_discovery" short-display-name="foundation_and_discovery">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.foundation_and_discovery.usage_per_host"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:billing.foundation_and_discovery.usage_per_host"
                    sampling="0"
                    short-display-name="(DPS) Foundation &amp; Discovery billing usage per host" unit="">
                    <description>The host-hours being monitored by Foundation &amp; Discovery, counted in 15 min intervals.</description>
                </monitor-dynatrace>
                <monitor-category name="metric_data_points" short-display-name="metric_data_points">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.foundation_and_discovery.metric_data_points.ingested_by_host"
                        entity-id="" entity-types="HOST" format="NUMBER"
                        name="builtin:billing.foundation_and_discovery.metric_data_points.ingested_by_host"
                        sampling="0"
                        short-display-name="(DPS) Ingested metric data points for Foundation &amp; Discovery per host" unit="">
                        <description>The number of metric data points split by Foundation &amp; Discovery hosts.</description>
                    </monitor-dynatrace>
                </monitor-category>
            </monitor-category>
            <monitor-category name="full_stack_monitoring" short-display-name="full_stack_monitoring">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.full_stack_monitoring.usage_per_host"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:billing.full_stack_monitoring.usage_per_host"
                    sampling="0"
                    short-display-name="(DPS) Full-Stack Monitoring billing usage per host" unit="">
                    <description>The GiB memory per host being monitored in full-stack mode, counted in 15 min intervals. For example, a host with 8 GiB of RAM monitored for 1 hour has 4 data points with a value of `2`. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                </monitor-dynatrace>
                <monitor-category name="metric_data_points" short-display-name="metric_data_points">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.full_stack_monitoring.metric_data_points.ingested_by_host"
                        entity-id="" entity-types="HOST" format="NUMBER"
                        name="builtin:billing.full_stack_monitoring.metric_data_points.ingested_by_host"
                        sampling="0"
                        short-display-name="(DPS) Metric data points reported and split by Full-Stack hosts" unit="">
                        <description>The number of metric data points split by Full-Stack hosts. The values reported in this metric are eligible for included-metric-data-point deduction. This trailing metric is reported at 15-minute intervals with up to a 15-minute delay. The pool of available included metrics for a "15-minute interval" is visible via builtin:billing.full_stack_monitoring.metric_data_points.included . To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                    </monitor-dynatrace>
                </monitor-category>
            </monitor-category>
            <monitor-category name="infrastructure_monitoring" short-display-name="infrastructure_monitoring">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.infrastructure_monitoring.usage_per_host"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:billing.infrastructure_monitoring.usage_per_host"
                    sampling="0"
                    short-display-name="(DPS) Infrastructure Monitoring billing usage per host" unit="">
                    <description>The host-hours being monitored in infrastructure-only mode, counted in 15 min intervals. A host monitored for the whole hour has 4 data points with a value of 0.25, regardless of the memory size. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                </monitor-dynatrace>
                <monitor-category name="metric_data_points" short-display-name="metric_data_points">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:billing.infrastructure_monitoring.metric_data_points.ingested_by_host"
                        entity-id="" entity-types="HOST" format="NUMBER"
                        name="builtin:billing.infrastructure_monitoring.metric_data_points.ingested_by_host"
                        sampling="0"
                        short-display-name="(DPS) Metric data points reported and split by Infrastructure-monitored hosts" unit="">
                        <description>The number of metric data points split by Infrastructure-monitored hosts. The values reported in this metric are eligible for included-metric-data-point deduction. This trailing metric is reported at 15-minute intervals with up to a 15-minute delay. The pool of available included metrics for a "15-minute interval" is visible via builtin:billing.infrastructure_monitoring.metric_data_points.included . To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                    </monitor-dynatrace>
                </monitor-category>
            </monitor-category>
            <monitor-category name="log_monitoring_classic" short-display-name="log_monitoring_classic">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.log_monitoring_classic.usage_by_entity"
                    entity-id=""
                    entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                    format="NUMBER"
                    name="builtin:billing.log_monitoring_classic.usage_by_entity"
                    sampling="0"
                    short-display-name="(DPS) Log Monitoring Classic billing usage by monitored entity" unit="">
                    <description>The number of log records ingested split by monitored entity. A log record is recognized by either a timestamp or a JSON object. For details on the log path, refer to the usage_by_log_path metric. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="mainframe_monitoring" short-display-name="mainframe_monitoring">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.mainframe_monitoring.usage"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:billing.mainframe_monitoring.usage"
                    sampling="0"
                    short-display-name="(DPS) Mainframe Monitoring billing usage" unit="">
                    <description>The total number of MSU-hours being monitored, counted in 15 min intervals.</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="runtime_application_protection" short-display-name="runtime_application_protection">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.runtime_application_protection.usage_per_host"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:billing.runtime_application_protection.usage_per_host"
                    sampling="0"
                    short-display-name="(DPS) Runtime Application Protection billing usage per host" unit="">
                    <description>GiB-memory per host protected with Runtime Application Protection (Application Security), counted at 15-minute intervals. For example, a host with 8 GiB of RAM monitored for 1 hour has 4 data points with a value of `2`. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="runtime_vulnerability_analytics" short-display-name="runtime_vulnerability_analytics">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.runtime_vulnerability_analytics.usage_per_host"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:billing.runtime_vulnerability_analytics.usage_per_host"
                    sampling="0"
                    short-display-name="(DPS) Runtime Vulnerability Analytics billing usage per host" unit="">
                    <description>GiB-memory per hosts protected with Runtime Vulnerability Analytics (Application Security), counted at 15-minute intervals. For example, a host with 8 GiB of RAM monitored for 1 hour has 4 data points with a value of `2`. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="serverless_functions_classic" short-display-name="serverless_functions_classic">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:billing.serverless_functions_classic.usage_by_entity"
                    entity-id=""
                    entity-types="APM_AGENT, APM_CLUSTER, APM_CLUSTER_NODE, APM_SECURITY_GATEWAY, APM_SERVER, APM_TENANT, APPLICATION, APPLICATION_METHOD, APPLICATION_METHOD_GROUP, APPMON_SERVER, APPMON_SYSTEM_PROFILE, AUTO_SCALING_GROUP, AWS_APPLICATION_LOAD_BALANCER, AWS_AVAILABILITY_ZONE, AWS_CREDENTIALS, AWS_LAMBDA_FUNCTION, AWS_NETWORK_LOAD_BALANCER, AZURE_API_MANAGEMENT_SERVICE, AZURE_APPLICATION_GATEWAY, AZURE_APP_SERVICE_PLAN, AZURE_COSMOS_DB, AZURE_CREDENTIALS, AZURE_EVENT_HUB, AZURE_EVENT_HUB_NAMESPACE, AZURE_FUNCTION_APP, AZURE_IOT_HUB, AZURE_LOAD_BALANCER, AZURE_MGMT_GROUP, AZURE_REDIS_CACHE, AZURE_REGION, AZURE_SERVICE_BUS_NAMESPACE, AZURE_SERVICE_BUS_QUEUE, AZURE_SERVICE_BUS_TOPIC, AZURE_SQL_DATABASE, AZURE_SQL_ELASTIC_POOL, AZURE_SQL_SERVER, AZURE_STORAGE_ACCOUNT, AZURE_SUBSCRIPTION, AZURE_TENANT, AZURE_VM, AZURE_VM_SCALE_SET, AZURE_WEB_APP, BOSH_DEPLOYMENT, BROWSER, CF_APPLICATION, CF_APPLICATION_INSTANCE, CF_FOUNDATION, CF_ORG, CF_SPACE, CINDER_VOLUME, CLOUD_APPLICATION, CLOUD_APPLICATION_INSTANCE, CLOUD_APPLICATION_NAMESPACE, CLOUD_NETWORK_INGRESS, CLOUD_NETWORK_POLICY, CONTAINER_GROUP, CONTAINER_GROUP_INSTANCE, CREDENTIALS_VAULT, CUSTOM_APPLICATION, CUSTOM_DEVICE, CUSTOM_DEVICE_GROUP, DATASTORE, DB_ENDPOINT, DB_ENDPOINT_GROUP, DCRUM_APPLICATION, DCRUM_SERVICE, DCRUM_SERVICE_INSTANCE, DEVICE_APPLICATION_METHOD, DEVICE_APPLICATION_METHOD_GROUP, DISK, DOCKER_CONTAINER_GROUP, DOCKER_CONTAINER_GROUP_INSTANCE, DYNAMO_DB_TABLE, EBS_VOLUME, EC2_INSTANCE, ELASTIC_LOAD_BALANCER, ENVIRONMENT, EXTENSION_TASK_CONFIGURATION, EXTERNAL_SYNTHETIC_TEST, EXTERNAL_SYNTHETIC_TEST_STEP, GCP_ZONE, GEOLOCATION, GEOLOC_SITE, GOOGLE_COMPUTE_ENGINE, GRAIL_BUSINESS_EVENTS_ANALYZE, GRAIL_BUSINESS_EVENTS_INGEST, GRAIL_BUSINESS_EVENTS_RETAIN, GRAIL_LOG_ANALYZE, GRAIL_LOG_INGEST, GRAIL_LOG_RETAIN, HOST, HOST_GROUP, HTTP_CHECK, HTTP_CHECK_STEP, HYPERVISOR, HYPERVISOR_CLUSTER, HYPERVISOR_DISK, KUBERNETES_CLUSTER, KUBERNETES_NODE, KUBERNETES_SERVICE, LOG_INSTANCE, MEASUREMENT, MEASUREMENT_GROUP, MOBILE_APPLICATION, MULTIPROTOCOL_MONITOR, NETWORK_INTERFACE, NEUTRON_SUBNET, OPENSTACK_AVAILABILITY_ZONE, OPENSTACK_COMPUTE_NODE, OPENSTACK_CREDENTIALS, OPENSTACK_PROJECT, OPENSTACK_REGION, OPENSTACK_VM, OS, PROCESS_GROUP, PROCESS_GROUP_INSTANCE, QUEUE, QUEUE_INSTANCE, RELATIONAL_DATABASE_SERVICE, REMOTE_PLUGIN_MODULE, REQUEST_ATTRIBUTE, RUNTIME_COMPONENT, S3BUCKET, SERVICE, SERVICE_INSTANCE, SERVICE_METHOD, SERVICE_METHOD_GROUP, SOFTWARE_COMPONENT, SWIFT_CONTAINER, SYNTHETIC_LOCATION, SYNTHETIC_TEST, SYNTHETIC_TEST_STEP, VCENTER, VIRTUALMACHINE, VMWARE_DATACENTER"
                    format="NUMBER"
                    name="builtin:billing.serverless_functions_classic.usage_by_entity"
                    sampling="0"
                    short-display-name="(DPS) Serverless Functions Classic billing usage by monitored entity" unit="">
                    <description>The number of invocations of the serverless function split by monitored entity. The term "function invocations" is equivalent to "function requests" or "function executions". For details on which functions are invoked, refer to the usage_by_function metric. To improve performance and avoid exceeding query limits when working with longer timeframes, use the total metric.</description>
                </monitor-dynatrace>
            </monitor-category>
        </monitor-category>
        <monitor-category name="containers" short-display-name="containers">
            <monitor-dynatrace callTime="ON_BENCH" computing="0"
                dynatrace-id="builtin:containers.devicemapper_data_space_available"
                entity-id="" entity-types="HOST" format="NUMBER"
                name="builtin:containers.devicemapper_data_space_available"
                sampling="0"
                short-display-name="Devicemapper data space available" unit="B"/>
            <monitor-dynatrace callTime="ON_BENCH" computing="0"
                dynatrace-id="builtin:containers.devicemapper_data_space_used"
                entity-id="" entity-types="HOST" format="NUMBER"
                name="builtin:containers.devicemapper_data_space_used"
                sampling="0"
                short-display-name="Devicemapper data space used" unit="B"/>
            <monitor-dynatrace callTime="ON_BENCH" computing="0"
                dynatrace-id="builtin:containers.devicemapper_metadata_space_available"
                entity-id="" entity-types="HOST" format="NUMBER"
                name="builtin:containers.devicemapper_metadata_space_available"
                sampling="0"
                short-display-name="Devicemapper meta-data space available" unit="B"/>
            <monitor-dynatrace callTime="ON_BENCH" computing="0"
                dynatrace-id="builtin:containers.devicemapper_metadata_space_used"
                entity-id="" entity-types="HOST" format="NUMBER"
                name="builtin:containers.devicemapper_metadata_space_used"
                sampling="0"
                short-display-name="Devicemapper meta-data space used" unit="B"/>
        </monitor-category>
        <monitor-category name="host" short-display-name="host">
            <monitor-category name="cpu" short-display-name="cpu">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.cpu.idle" entity-id=""
                    entity-types="HOST" format="NUMBER"
                    name="builtin:host.cpu.idle" sampling="0"
                    short-display-name="CPU idle" unit="%">
                    <description>Average CPU time, when the CPU didn't have anything to do</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.cpu.iowait" entity-id=""
                    entity-types="HOST" format="NUMBER"
                    name="builtin:host.cpu.iowait" sampling="0"
                    short-display-name="CPU I/O wait" unit="%">
                    <description>Percentage of time when CPU was idle during which the system had an outstanding I/O request. It is not available on Windows.</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.cpu.steal" entity-id=""
                    entity-types="HOST" format="NUMBER"
                    name="builtin:host.cpu.steal" sampling="0"
                    short-display-name="CPU steal" unit="%">
                    <description>Average CPU time, when a virtual machine waits to get CPU cycles from the hypervisor. In a virtual environment, CPU cycles are shared across virtual machines on the hypervisor server. If your virtualized host displays a high CPU steal, it means CPU cycles are being taken away from your virtual machine to serve other purposes. It may indicate an overloaded hypervisor. It's available only for Linux hosts</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.cpu.system" entity-id=""
                    entity-types="HOST" format="NUMBER"
                    name="builtin:host.cpu.system" sampling="0"
                    short-display-name="CPU system" unit="%">
                    <description>Average CPU time when CPU was running in kernel mode</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.cpu.user" entity-id=""
                    entity-types="HOST" format="NUMBER"
                    name="builtin:host.cpu.user" sampling="0"
                    short-display-name="CPU user" unit="%">
                    <description>Average CPU time when CPU was running in user mode</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="disk" short-display-name="disk">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.avail" entity-id=""
                    entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.avail" sampling="0"
                    short-display-name="Disk available" unit="B">
                    <description>Amount of free space available for user in file system. On Linux and AIX it is free space available for unprivileged user. It doesn't contain part of free space reserved for the root.</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.bytesRead"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.bytesRead" sampling="0"
                    short-display-name="Disk read bytes per second" unit="B/s">
                    <description>Speed of read from file system in bytes per second</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.bytesWritten"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.bytesWritten" sampling="0"
                    short-display-name="Disk write bytes per second" unit="B/s">
                    <description>Speed of write to file system in bytes per second</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.free" entity-id=""
                    entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.free" sampling="0"
                    short-display-name="Disk available %" unit="%">
                    <description>Percentage of free space available for user in file system. On Linux and AIX it is % of free space available for unprivileged user. It doesn't contain part of free space reserved for the root.</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.queueLength"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.queueLength" sampling="0"
                    short-display-name="Disk average queue length" unit="">
                    <description>Average number of read and write operations in disk queue</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.readOps"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.readOps" sampling="0"
                    short-display-name="Disk read operations per second" unit="/s">
                    <description>Number of read operations from file system per second</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.readTime"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.readTime" sampling="0"
                    short-display-name="Disk read time" unit="ms">
                    <description>Average time of read from file system. It shows average disk latency during read.</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.usedPct"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.usedPct" sampling="0"
                    short-display-name="Disk used %" unit="%">
                    <description>Percentage of used space in file system</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.writeOps"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.writeOps" sampling="0"
                    short-display-name="Disk write operations per second" unit="/s">
                    <description>Number of write operations to file system per second</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.disk.writeTime"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.disk.writeTime" sampling="0"
                    short-display-name="Disk write time" unit="ms">
                    <description>Average time of write to file system. It shows average disk latency during write.</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="mem" short-display-name="mem">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.mem.used" entity-id=""
                    entity-types="HOST" format="NUMBER"
                    name="builtin:host.mem.used" sampling="0"
                    short-display-name="Memory used" unit="B">
                    <description>Used memory is calculated by OneAgent as follows: used = total - available. So the used memory metric displayed in Dynatrace analysis views is not equal to the used memory metric displayed by system tools. At the same time, it's important to remember that system tools report used memory the way they do due to historical reasons, and that this particular method of calculating used memory isn't really representative of how the Linux kernel manages memory in modern systems. The difference in these measurements is in fact quite significant, too.</description>
                </monitor-dynatrace>
                <monitor-category name="avail" short-display-name="avail">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:host.mem.avail.bytes"
                        entity-id="" entity-types="HOST" format="NUMBER"
                        name="builtin:host.mem.avail.bytes" sampling="0"
                        short-display-name="Memory available" unit="B">
                        <description>The amount of memory (RAM) available on the host. The memory that is available for allocation to new or existing processes. Available memory is an estimation of how much memory is available for use without swapping.</description>
                    </monitor-dynatrace>
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:host.mem.avail.pct"
                        entity-id="" entity-types="HOST" format="NUMBER"
                        name="builtin:host.mem.avail.pct" sampling="0"
                        short-display-name="Memory available %" unit="%">
                        <description>The percentage of memory (RAM) available on the host. The memory that is available for allocation to new or existing processes. Available memory is an estimation of how much memory is available for use without swapping. Shows available memory as percentages.</description>
                    </monitor-dynatrace>
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:host.mem.avail.pfps"
                        entity-id="" entity-types="HOST" format="NUMBER"
                        name="builtin:host.mem.avail.pfps" sampling="0"
                        short-display-name="Page faults per second" unit="/s">
                        <description>The measure of the number of page faults per second on the monitored host. This value includes soft faults and hard faults.</description>
                    </monitor-dynatrace>
                </monitor-category>
            </monitor-category>
            <monitor-category name="osService" short-display-name="osService">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:host.osService.availability"
                    entity-id="" entity-types="HOST" format="NUMBER"
                    name="builtin:host.osService.availability"
                    sampling="0"
                    short-display-name="OS Service availability" unit="">
                    <description>This metric provides the status of the OS service. If the OS service is running, the OS module is reporting "1" as a value of the metric. In any other case, the metric has a value of "0"Note that this metric provides data only from Classic Windows services monitoring (supported only on Windows), currently replaced by the new OS Services monitoring. To learn more, see [Classic Windows services monitoring](https://dt-url.net/classic-windows-services).</description>
                </monitor-dynatrace>
            </monitor-category>
        </monitor-category>
        <monitor-category name="service" short-display-name="service">
            <monitor-category name="errors" short-display-name="errors">
                <monitor-category name="client" short-display-name="client">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:service.errors.client.rate"
                        entity-id="" entity-types="SERVICE"
                        format="NUMBER"
                        name="builtin:service.errors.client.rate"
                        sampling="0"
                        short-display-name="Failure rate (client side  errors)" unit="%"/>
                </monitor-category>
                <monitor-category name="fivexx" short-display-name="fivexx">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:service.errors.fivexx.count"
                        entity-id="" entity-types="SERVICE"
                        format="NUMBER"
                        name="builtin:service.errors.fivexx.count"
                        sampling="0"
                        short-display-name="Number of HTTP 5xx errors" unit="">
                        <description>HTTP requests with a status code between 500 and 599 for a given key request measured on server side. To learn about failure detection, see [Configure service failure detection](https://dt-url.net/service-failuredetection).</description>
                    </monitor-dynatrace>
                </monitor-category>
                <monitor-category name="fourxx" short-display-name="fourxx">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:service.errors.fourxx.count"
                        entity-id="" entity-types="SERVICE"
                        format="NUMBER"
                        name="builtin:service.errors.fourxx.count"
                        sampling="0"
                        short-display-name="Number of HTTP 4xx errors" unit="">
                        <description>HTTP requests with a status code between 400 and 499 for a given key request measured on server side. To learn about failure detection, see [Configure service failure detection](https://dt-url.net/service-failuredetection).</description>
                    </monitor-dynatrace>
                </monitor-category>
                <monitor-category name="server" short-display-name="server">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:service.errors.server.rate"
                        entity-id="" entity-types="SERVICE"
                        format="NUMBER"
                        name="builtin:service.errors.server.rate"
                        sampling="0"
                        short-display-name="Failure rate (server side  errors)" unit="%"/>
                </monitor-category>
                <monitor-category name="total" short-display-name="total">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:service.errors.total.rate"
                        entity-id="" entity-types="SERVICE"
                        format="NUMBER"
                        name="builtin:service.errors.total.rate"
                        sampling="0"
                        short-display-name="Failure rate (any  errors)" unit="%"/>
                </monitor-category>
            </monitor-category>
            <monitor-category name="response" short-display-name="response">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="builtin:service.response.time"
                    entity-id="" entity-types="SERVICE" format="NUMBER"
                    name="builtin:service.response.time" sampling="0"
                    short-display-name="Response time" unit="µs">
                    <description>Time consumed by a particular service until a response is sent back to the calling application, process, service etc.To learn how Dynatrace calculates service timings, see [Service analysis timings](https://dt-url.net/service-timings).</description>
                </monitor-dynatrace>
            </monitor-category>
        </monitor-category>
        <monitor-category name="tech" short-display-name="tech">
            <monitor-category name="jvm" short-display-name="jvm">
                <monitor-category name="spark" short-display-name="spark">
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:tech.jvm.spark.aliveWorkers"
                        entity-id="" entity-types="PROCESS_GROUP"
                        format="NUMBER"
                        name="builtin:tech.jvm.spark.aliveWorkers"
                        sampling="0" short-display-name="Alive workers" unit=""/>
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:tech.jvm.spark.apps"
                        entity-id="" entity-types="PROCESS_GROUP"
                        format="NUMBER"
                        name="builtin:tech.jvm.spark.apps" sampling="0"
                        short-display-name="Master apps" unit=""/>
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:tech.jvm.spark.waitingApps"
                        entity-id="" entity-types="PROCESS_GROUP"
                        format="NUMBER"
                        name="builtin:tech.jvm.spark.waitingApps"
                        sampling="0" short-display-name="Waiting apps" unit=""/>
                    <monitor-dynatrace callTime="ON_BENCH" computing="0"
                        dynatrace-id="builtin:tech.jvm.spark.workers"
                        entity-id="" entity-types="PROCESS_GROUP"
                        format="NUMBER"
                        name="builtin:tech.jvm.spark.workers"
                        sampling="0" short-display-name="Master workers" unit=""/>
                    <monitor-category name="aliveWorkers" short-display-name="aliveWorkers">
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.aliveWorkers.gauge"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.aliveWorkers.gauge"
                            sampling="0"
                            short-display-name="Alive workers" unit=""/>
                    </monitor-category>
                    <monitor-category name="apps" short-display-name="apps">
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.apps.gauge"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.apps.gauge"
                            sampling="0"
                            short-display-name="Master apps" unit=""/>
                    </monitor-category>
                    <monitor-category name="driver" short-display-name="driver">
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.driver.Count"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.driver.Count"
                            sampling="0"
                            short-display-name="Processing time - count" unit=""/>
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.driver.Mean"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.driver.Mean"
                            sampling="0"
                            short-display-name="Processing time - mean" unit="ms"/>
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.driver.OneMinuteRate"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.driver.OneMinuteRate"
                            sampling="0"
                            short-display-name="Processing time - one minute rate" unit="/s"/>
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.driver.activeJobs"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.driver.activeJobs"
                            sampling="0"
                            short-display-name="Active jobs" unit=""/>
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.driver.allJobs"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.driver.allJobs"
                            sampling="0" short-display-name="Total jobs" unit=""/>
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.driver.failedStages"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.driver.failedStages"
                            sampling="0"
                            short-display-name="Failed stages" unit=""/>
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.driver.runningStages"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.driver.runningStages"
                            sampling="0"
                            short-display-name="Running stages" unit=""/>
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.driver.waitingStages"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.driver.waitingStages"
                            sampling="0"
                            short-display-name="Waiting stages" unit=""/>
                        <monitor-category name="Count" short-display-name="Count">
                            <monitor-dynatrace callTime="ON_BENCH"
                                computing="0"
                                dynatrace-id="builtin:tech.jvm.spark.driver.Count.timer"
                                entity-id=""
                                entity-types="PROCESS_GROUP"
                                format="NUMBER"
                                name="builtin:tech.jvm.spark.driver.Count.timer"
                                sampling="0"
                                short-display-name="Processing time - count" unit=""/>
                        </monitor-category>
                        <monitor-category name="Mean" short-display-name="Mean">
                            <monitor-dynatrace callTime="ON_BENCH"
                                computing="0"
                                dynatrace-id="builtin:tech.jvm.spark.driver.Mean.timer"
                                entity-id=""
                                entity-types="PROCESS_GROUP"
                                format="NUMBER"
                                name="builtin:tech.jvm.spark.driver.Mean.timer"
                                sampling="0"
                                short-display-name="Processing time - mean" unit="ms"/>
                        </monitor-category>
                        <monitor-category name="OneMinuteRate" short-display-name="OneMinuteRate">
                            <monitor-dynatrace callTime="ON_BENCH"
                                computing="0"
                                dynatrace-id="builtin:tech.jvm.spark.driver.OneMinuteRate.timer"
                                entity-id=""
                                entity-types="PROCESS_GROUP"
                                format="NUMBER"
                                name="builtin:tech.jvm.spark.driver.OneMinuteRate.timer"
                                sampling="0"
                                short-display-name="Processing time - one minute rate" unit="/s"/>
                        </monitor-category>
                        <monitor-category name="activeJobs" short-display-name="activeJobs">
                            <monitor-dynatrace callTime="ON_BENCH"
                                computing="0"
                                dynatrace-id="builtin:tech.jvm.spark.driver.activeJobs.gauge"
                                entity-id=""
                                entity-types="PROCESS_GROUP"
                                format="NUMBER"
                                name="builtin:tech.jvm.spark.driver.activeJobs.gauge"
                                sampling="0"
                                short-display-name="Active jobs" unit=""/>
                        </monitor-category>
                        <monitor-category name="allJobs" short-display-name="allJobs">
                            <monitor-dynatrace callTime="ON_BENCH"
                                computing="0"
                                dynatrace-id="builtin:tech.jvm.spark.driver.allJobs.gauge"
                                entity-id=""
                                entity-types="PROCESS_GROUP"
                                format="NUMBER"
                                name="builtin:tech.jvm.spark.driver.allJobs.gauge"
                                sampling="0"
                                short-display-name="Total jobs" unit=""/>
                        </monitor-category>
                        <monitor-category name="failedStages" short-display-name="failedStages">
                            <monitor-dynatrace callTime="ON_BENCH"
                                computing="0"
                                dynatrace-id="builtin:tech.jvm.spark.driver.failedStages.gauge"
                                entity-id=""
                                entity-types="PROCESS_GROUP"
                                format="NUMBER"
                                name="builtin:tech.jvm.spark.driver.failedStages.gauge"
                                sampling="0"
                                short-display-name="Failed stages" unit=""/>
                        </monitor-category>
                        <monitor-category name="runningStages" short-display-name="runningStages">
                            <monitor-dynatrace callTime="ON_BENCH"
                                computing="0"
                                dynatrace-id="builtin:tech.jvm.spark.driver.runningStages.gauge"
                                entity-id=""
                                entity-types="PROCESS_GROUP"
                                format="NUMBER"
                                name="builtin:tech.jvm.spark.driver.runningStages.gauge"
                                sampling="0"
                                short-display-name="Running stages" unit=""/>
                        </monitor-category>
                        <monitor-category name="waitingStages" short-display-name="waitingStages">
                            <monitor-dynatrace callTime="ON_BENCH"
                                computing="0"
                                dynatrace-id="builtin:tech.jvm.spark.driver.waitingStages.gauge"
                                entity-id=""
                                entity-types="PROCESS_GROUP"
                                format="NUMBER"
                                name="builtin:tech.jvm.spark.driver.waitingStages.gauge"
                                sampling="0"
                                short-display-name="Waiting stages" unit=""/>
                        </monitor-category>
                    </monitor-category>
                    <monitor-category name="waitingApps" short-display-name="waitingApps">
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.waitingApps.gauge"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.waitingApps.gauge"
                            sampling="0"
                            short-display-name="Waiting apps" unit=""/>
                    </monitor-category>
                    <monitor-category name="workers" short-display-name="workers">
                        <monitor-dynatrace callTime="ON_BENCH"
                            computing="0"
                            dynatrace-id="builtin:tech.jvm.spark.workers.gauge"
                            entity-id="" entity-types="PROCESS_GROUP"
                            format="NUMBER"
                            name="builtin:tech.jvm.spark.workers.gauge"
                            sampling="0"
                            short-display-name="Master workers" unit=""/>
                    </monitor-category>
                </monitor-category>
            </monitor-category>
        </monitor-category>
    </monitor-category>
    <monitor-category name="calc" short-display-name="calc">
        <monitor-category name="service" short-display-name="service">
            <monitor-dynatrace callTime="ON_BENCH" computing="0"
                dynatrace-id="calc:service.testtransactioncputime"
                entity-id="" entity-types="SERVICE" format="NUMBER"
                name="calc:service.testtransactioncputime" sampling="0"
                short-display-name="Test Transaction CPU Time" unit="µs"/>
            <monitor-dynatrace callTime="ON_BENCH" computing="0"
                dynatrace-id="calc:service.transaction_cpu" entity-id=""
                entity-types="SERVICE" format="NUMBER"
                name="calc:service.transaction_cpu" sampling="0"
                short-display-name="transaction_CPU" unit="µs"/>
        </monitor-category>
    </monitor-category>
    <monitor-category name="func" short-display-name="func">
        <monitor-category name="slo" short-display-name="slo">
            <monitor-dynatrace callTime="ON_BENCH" computing="0"
                dynatrace-id="func:slo.skobank_frontend" entity-id=""
                entity-types="SERVICE" format="NUMBER"
                name="func:slo.skobank_frontend" sampling="0"
                short-display-name="SkoBank frontend" unit="%">
                <description>slo_id:b5691ad5-60af-33f0-b991-6000e4ce2fd8</description>
            </monitor-dynatrace>
            <monitor-dynatrace callTime="ON_BENCH" computing="0"
                dynatrace-id="func:slo.skobank_overall" entity-id=""
                entity-types="SERVICE" format="NUMBER"
                name="func:slo.skobank_overall" sampling="0"
                short-display-name="SkoBank overall" unit="%">
                <description>slo_id:82360ce1-5679-352a-a28a-e42913a98bee</description>
            </monitor-dynatrace>
            <monitor-category name="errorBudget" short-display-name="errorBudget">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="func:slo.errorBudget.skobank_frontend"
                    entity-id="" entity-types="SERVICE" format="NUMBER"
                    name="func:slo.errorBudget.skobank_frontend"
                    sampling="0"
                    short-display-name="Error budget - SkoBank frontend" unit="%">
                    <description>slo_id:b5691ad5-60af-33f0-b991-6000e4ce2fd8</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="func:slo.errorBudget.skobank_overall"
                    entity-id="" entity-types="SERVICE" format="NUMBER"
                    name="func:slo.errorBudget.skobank_overall"
                    sampling="0"
                    short-display-name="Error budget - SkoBank overall" unit="%">
                    <description>slo_id:82360ce1-5679-352a-a28a-e42913a98bee</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="errorBudgetBurnRate" short-display-name="errorBudgetBurnRate">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="func:slo.errorBudgetBurnRate.skobank_frontend"
                    entity-id="" entity-types="SERVICE" format="NUMBER"
                    name="func:slo.errorBudgetBurnRate.skobank_frontend"
                    sampling="0"
                    short-display-name="Error budget burn rate - SkoBank frontend" unit="">
                    <description>slo_id:b5691ad5-60af-33f0-b991-6000e4ce2fd8</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="func:slo.errorBudgetBurnRate.skobank_overall"
                    entity-id="" entity-types="SERVICE" format="NUMBER"
                    name="func:slo.errorBudgetBurnRate.skobank_overall"
                    sampling="0"
                    short-display-name="Error budget burn rate - SkoBank overall" unit="">
                    <description>slo_id:82360ce1-5679-352a-a28a-e42913a98bee</description>
                </monitor-dynatrace>
            </monitor-category>
            <monitor-category name="normalizedErrorBudget" short-display-name="normalizedErrorBudget">
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="func:slo.normalizedErrorBudget.skobank_frontend"
                    entity-id="" entity-types="SERVICE" format="NUMBER"
                    name="func:slo.normalizedErrorBudget.skobank_frontend"
                    sampling="0"
                    short-display-name="Normalized error budget - SkoBank frontend" unit="%">
                    <description>slo_id:b5691ad5-60af-33f0-b991-6000e4ce2fd8</description>
                </monitor-dynatrace>
                <monitor-dynatrace callTime="ON_BENCH" computing="0"
                    dynatrace-id="func:slo.normalizedErrorBudget.skobank_overall"
                    entity-id="" entity-types="SERVICE" format="NUMBER"
                    name="func:slo.normalizedErrorBudget.skobank_overall"
                    sampling="0"
                    short-display-name="Normalized error budget - SkoBank overall" unit="%">
                    <description>slo_id:82360ce1-5679-352a-a28a-e42913a98bee</description>
                </monitor-dynatrace>
            </monitor-category>
        </monitor-category>
    </monitor-category>
</connection-dynatrace>
